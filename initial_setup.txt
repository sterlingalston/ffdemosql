create database db_ff_external_sql;
use database db_ff_external_sql;
-- =============================================================================
-- Fiserv-Style Demo Financial Services Database for Snowflake
-- Converted from Azure SQL Server to Snowflake DDL
-- Sample database schema representing financial technology infrastructure
-- This is educational demo data only and not based on actual Fiserv systems
-- =============================================================================
-- =============================================================================
-- DATABASE AND SCHEMA CREATION
-- =============================================================================
-- Create database (uncomment if creating new database)
-- CREATE DATABASE FISERV_DEMO;
-- USE DATABASE FISERV_DEMO;
-- Create schemas
CREATE SCHEMA IF NOT EXISTS CORE;
CREATE SCHEMA IF NOT EXISTS PAYMENTS;
CREATE SCHEMA IF NOT EXISTS CARDS;
CREATE SCHEMA IF NOT EXISTS DIGITAL;
CREATE SCHEMA IF NOT EXISTS RISK;
CREATE SCHEMA IF NOT EXISTS COMPLIANCE;
CREATE SCHEMA IF NOT EXISTS ANALYTICS;
-- =============================================================================
-- CORE BANKING ENTITIES
-- =============================================================================
-- Financial Institutions (Banks/Credit Unions that use the platform)
CREATE
OR REPLACE TABLE CORE.FINANCIAL_INSTITUTIONS (
    INSTITUTION_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_CODE VARCHAR(20) NOT NULL,
    INSTITUTION_NAME VARCHAR(200) NOT NULL,
    INSTITUTION_TYPE VARCHAR(50) NOT NULL,
    ROUTING_NUMBER VARCHAR(9) NOT NULL,
    SWIFT_CODE VARCHAR(11),
    ADDRESS VARCHAR(500),
    CITY VARCHAR(100),
    STATE VARCHAR(50),
    ZIP_CODE VARCHAR(20),
    COUNTRY VARCHAR(100) DEFAULT 'USA',
    REGULATION_LEVEL VARCHAR(50) NOT NULL,
    ASSETS_UNDER_MANAGEMENT NUMBER(18, 2),
    CUSTOMER_COUNT NUMBER(38, 0),
    PLATFORM_ONBOARD_DATE TIMESTAMP_NTZ NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'Active',
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    -- Primary key and unique constraints
    CONSTRAINT PK_FINANCIAL_INSTITUTIONS PRIMARY KEY (INSTITUTION_ID),
    CONSTRAINT UQ_FINANCIAL_INSTITUTIONS_CODE UNIQUE (INSTITUTION_CODE),
    CONSTRAINT UQ_FINANCIAL_INSTITUTIONS_ROUTING UNIQUE (ROUTING_NUMBER)
);
-- Customer/Account Holders
CREATE
OR REPLACE TABLE CORE.CUSTOMERS (
    CUSTOMER_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    CUSTOMER_NUMBER VARCHAR(50) NOT NULL,
    CUSTOMER_TYPE VARCHAR(20) NOT NULL,
    FIRST_NAME VARCHAR(100),
    LAST_NAME VARCHAR(100),
    BUSINESS_NAME VARCHAR(200),
    DATE_OF_BIRTH DATE,
    SSN_ENCRYPTED BINARY,
    EIN_ENCRYPTED BINARY,
    EMAIL VARCHAR(250),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(500),
    CITY VARCHAR(100),
    STATE VARCHAR(50),
    ZIP_CODE VARCHAR(20),
    CREDIT_SCORE NUMBER(3, 0),
    RISK_RATING VARCHAR(20) DEFAULT 'Medium',
    KYC_STATUS VARCHAR(20) DEFAULT 'Pending',
    CUSTOMER_SINCE TIMESTAMP_NTZ NOT NULL,
    LAST_LOGIN_DATE TIMESTAMP_NTZ,
    STATUS VARCHAR(20) DEFAULT 'Active',
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_CUSTOMERS PRIMARY KEY (CUSTOMER_ID),
    CONSTRAINT FK_CUSTOMERS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID),
    CONSTRAINT UQ_CUSTOMERS_NUMBER UNIQUE (INSTITUTION_ID, CUSTOMER_NUMBER)
);
-- Account Types and Products
CREATE
OR REPLACE TABLE CORE.PRODUCT_TYPES (
    PRODUCT_TYPE_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    PRODUCT_CODE VARCHAR(20) NOT NULL,
    PRODUCT_NAME VARCHAR(100) NOT NULL,
    PRODUCT_CATEGORY VARCHAR(50) NOT NULL,
    INTEREST_RATE NUMBER(5, 4),
    MINIMUM_BALANCE NUMBER(12, 2) DEFAULT 0,
    MONTHLY_FEE NUMBER(8, 2) DEFAULT 0,
    OVERDRAFT_FEE NUMBER(8, 2),
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CONSTRAINT PK_PRODUCT_TYPES PRIMARY KEY (PRODUCT_TYPE_ID),
    CONSTRAINT UQ_PRODUCT_TYPES_CODE UNIQUE (PRODUCT_CODE)
);
-- Customer Accounts
CREATE
OR REPLACE TABLE CORE.ACCOUNTS (
    ACCOUNT_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    CUSTOMER_ID NUMBER NOT NULL,
    PRODUCT_TYPE_ID NUMBER NOT NULL,
    ACCOUNT_NUMBER VARCHAR(50) NOT NULL,
    ACCOUNT_NAME VARCHAR(200),
    CURRENT_BALANCE NUMBER(15, 2) DEFAULT 0,
    AVAILABLE_BALANCE NUMBER(15, 2) DEFAULT 0,
    PENDING_BALANCE NUMBER(15, 2) DEFAULT 0,
    OVERDRAFT_LIMIT NUMBER(12, 2) DEFAULT 0,
    INTEREST_RATE NUMBER(5, 4),
    OPEN_DATE TIMESTAMP_NTZ NOT NULL,
    LAST_TRANSACTION_DATE TIMESTAMP_NTZ,
    STATUS VARCHAR(20) DEFAULT 'Active',
    CLOSE_DATE TIMESTAMP_NTZ,
    CLOSE_REASON VARCHAR(100),
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_ACCOUNTS PRIMARY KEY (ACCOUNT_ID),
    CONSTRAINT FK_ACCOUNTS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID),
    CONSTRAINT FK_ACCOUNTS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CORE.CUSTOMERS(CUSTOMER_ID),
    CONSTRAINT FK_ACCOUNTS_PRODUCT_TYPE FOREIGN KEY (PRODUCT_TYPE_ID) REFERENCES CORE.PRODUCT_TYPES(PRODUCT_TYPE_ID),
    CONSTRAINT UQ_ACCOUNTS_NUMBER UNIQUE (INSTITUTION_ID, ACCOUNT_NUMBER)
);
-- =============================================================================
-- PAYMENT PROCESSING
-- =============================================================================
-- Payment Networks and Processors
CREATE
OR REPLACE TABLE PAYMENTS.PAYMENT_NETWORKS (
    NETWORK_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    NETWORK_CODE VARCHAR(20) NOT NULL,
    NETWORK_NAME VARCHAR(100) NOT NULL,
    NETWORK_TYPE VARCHAR(50) NOT NULL,
    PROCESSING_FEE NUMBER(8, 4),
    SETTLEMENT_TIME VARCHAR(50),
    MAX_TRANSACTION_AMOUNT NUMBER(15, 2),
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CONSTRAINT PK_PAYMENT_NETWORKS PRIMARY KEY (NETWORK_ID),
    CONSTRAINT UQ_PAYMENT_NETWORKS_CODE UNIQUE (NETWORK_CODE)
);
-- Payment Transactions
CREATE
OR REPLACE TABLE PAYMENTS.TRANSACTIONS (
    TRANSACTION_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    NETWORK_ID NUMBER NOT NULL,
    TRANSACTION_NUMBER VARCHAR(50) NOT NULL,
    PAYMENT_TYPE VARCHAR(50) NOT NULL,
    DEBIT_ACCOUNT_ID NUMBER,
    CREDIT_ACCOUNT_ID NUMBER,
    EXTERNAL_ACCOUNT_NUMBER VARCHAR(50),
    EXTERNAL_ROUTING_NUMBER VARCHAR(9),
    EXTERNAL_BANK_NAME VARCHAR(200),
    AMOUNT NUMBER(15, 2) NOT NULL,
    CURRENCY VARCHAR(3) DEFAULT 'USD',
    TRANSACTION_DATE TIMESTAMP_NTZ NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    SETTLEMENT_DATE DATE,
    STATUS VARCHAR(20) DEFAULT 'Pending',
    STATUS_REASON VARCHAR(200),
    DESCRIPTION VARCHAR(500),
    REFERENCE VARCHAR(100),
    PROCESSING_FEE NUMBER(8, 2) DEFAULT 0,
    RISK_SCORE NUMBER(3, 0),
    FRAUD_FLAG BOOLEAN DEFAULT FALSE,
    COMPLIANCE_FLAG BOOLEAN DEFAULT FALSE,
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    MODIFIED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_TRANSACTIONS PRIMARY KEY (TRANSACTION_ID),
    CONSTRAINT FK_TRANSACTIONS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID),
    CONSTRAINT FK_TRANSACTIONS_NETWORK FOREIGN KEY (NETWORK_ID) REFERENCES PAYMENTS.PAYMENT_NETWORKS(NETWORK_ID),
    CONSTRAINT FK_TRANSACTIONS_DEBIT_ACCOUNT FOREIGN KEY (DEBIT_ACCOUNT_ID) REFERENCES CORE.ACCOUNTS(ACCOUNT_ID),
    CONSTRAINT FK_TRANSACTIONS_CREDIT_ACCOUNT FOREIGN KEY (CREDIT_ACCOUNT_ID) REFERENCES CORE.ACCOUNTS(ACCOUNT_ID),
    CONSTRAINT UQ_TRANSACTIONS_NUMBER UNIQUE (INSTITUTION_ID, TRANSACTION_NUMBER)
);
-- =============================================================================
-- CARD SERVICES
-- =============================================================================
-- Card Programs
CREATE
OR REPLACE TABLE CARDS.CARD_PROGRAMS (
    PROGRAM_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    PROGRAM_CODE VARCHAR(20) NOT NULL,
    PROGRAM_NAME VARCHAR(100) NOT NULL,
    CARD_TYPE VARCHAR(50) NOT NULL,
    CARD_NETWORK VARCHAR(20) NOT NULL,
    BIN VARCHAR(6) NOT NULL,
    ANNUAL_FEE NUMBER(8, 2) DEFAULT 0,
    INTEREST_RATE NUMBER(6, 4),
    CASH_ADVANCE_FEE NUMBER(5, 4),
    FOREIGN_TRANSACTION_FEE NUMBER(5, 4),
    REWARDS_PROGRAM VARCHAR(100),
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CONSTRAINT PK_CARD_PROGRAMS PRIMARY KEY (PROGRAM_ID),
    CONSTRAINT UQ_CARD_PROGRAMS_CODE UNIQUE (PROGRAM_CODE)
);
-- Card Accounts
CREATE
OR REPLACE TABLE CARDS.CARD_ACCOUNTS (
    CARD_ACCOUNT_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    CUSTOMER_ID NUMBER NOT NULL,
    PROGRAM_ID NUMBER NOT NULL,
    LINKED_ACCOUNT_ID NUMBER,
    CARD_NUMBER_ENCRYPTED BINARY NOT NULL,
    CARD_NUMBER_MASKED VARCHAR(20) NOT NULL,
    EXPIRATION_DATE VARCHAR(5) NOT NULL,
    CVV_ENCRYPTED BINARY,
    CARD_HOLDER_NAME VARCHAR(200) NOT NULL,
    CREDIT_LIMIT NUMBER(12, 2),
    AVAILABLE_CREDIT NUMBER(12, 2),
    CURRENT_BALANCE NUMBER(12, 2) DEFAULT 0,
    MINIMUM_PAYMENT NUMBER(10, 2) DEFAULT 0,
    LAST_PAYMENT_DATE TIMESTAMP_NTZ,
    NEXT_PAYMENT_DUE DATE,
    STATUS VARCHAR(20) DEFAULT 'Active',
    ISSUE_DATE TIMESTAMP_NTZ NOT NULL,
    ACTIVATION_DATE TIMESTAMP_NTZ,
    BLOCK_REASON VARCHAR(200),
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_CARD_ACCOUNTS PRIMARY KEY (CARD_ACCOUNT_ID),
    CONSTRAINT FK_CARD_ACCOUNTS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID),
    CONSTRAINT FK_CARD_ACCOUNTS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CORE.CUSTOMERS(CUSTOMER_ID),
    CONSTRAINT FK_CARD_ACCOUNTS_PROGRAM FOREIGN KEY (PROGRAM_ID) REFERENCES CARDS.CARD_PROGRAMS(PROGRAM_ID),
    CONSTRAINT FK_CARD_ACCOUNTS_LINKED_ACCOUNT FOREIGN KEY (LINKED_ACCOUNT_ID) REFERENCES CORE.ACCOUNTS(ACCOUNT_ID)
);
-- Card Transactions
CREATE
OR REPLACE TABLE CARDS.CARD_TRANSACTIONS (
    CARD_TRANSACTION_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    CARD_ACCOUNT_ID NUMBER NOT NULL,
    TRANSACTION_TYPE VARCHAR(50) NOT NULL,
    AMOUNT NUMBER(12, 2) NOT NULL,
    CURRENCY VARCHAR(3) DEFAULT 'USD',
    MERCHANT_NAME VARCHAR(200),
    MERCHANT_CATEGORY VARCHAR(100),
    MERCHANT_ID VARCHAR(50),
    TRANSACTION_DATE TIMESTAMP_NTZ NOT NULL,
    POSTING_DATE TIMESTAMP_NTZ,
    AUTHORIZATION_CODE VARCHAR(20),
    NETWORK_TRANSACTION_ID VARCHAR(50),
    STATUS VARCHAR(20) DEFAULT 'Pending',
    DECLINE_REASON VARCHAR(200),
    LOCATION VARCHAR(200),
    COUNTRY VARCHAR(100),
    RISK_SCORE NUMBER(3, 0),
    FRAUD_FLAG BOOLEAN DEFAULT FALSE,
    REWARDS_EARNED NUMBER(8, 2) DEFAULT 0,
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_CARD_TRANSACTIONS PRIMARY KEY (CARD_TRANSACTION_ID),
    CONSTRAINT FK_CARD_TRANSACTIONS_CARD_ACCOUNT FOREIGN KEY (CARD_ACCOUNT_ID) REFERENCES CARDS.CARD_ACCOUNTS(CARD_ACCOUNT_ID)
);
-- =============================================================================
-- DIGITAL BANKING
-- =============================================================================
-- Digital Banking Users
CREATE
OR REPLACE TABLE DIGITAL.DIGITAL_USERS (
    USER_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    CUSTOMER_ID NUMBER NOT NULL,
    USERNAME VARCHAR(100) NOT NULL,
    PASSWORD_HASH BINARY NOT NULL,
    EMAIL VARCHAR(250) NOT NULL,
    MOBILE_PHONE VARCHAR(20),
    LAST_LOGIN_DATE TIMESTAMP_NTZ,
    LOGIN_ATTEMPTS NUMBER(3, 0) DEFAULT 0,
    IS_LOCKED BOOLEAN DEFAULT FALSE,
    LOCKOUT_END_DATE TIMESTAMP_NTZ,
    TWO_FACTOR_ENABLED BOOLEAN DEFAULT FALSE,
    PREFERRED_NOTIFICATION_METHOD VARCHAR(20) DEFAULT 'Email',
    STATUS VARCHAR(20) DEFAULT 'Active',
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_DIGITAL_USERS PRIMARY KEY (USER_ID),
    CONSTRAINT FK_DIGITAL_USERS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CORE.CUSTOMERS(CUSTOMER_ID),
    CONSTRAINT UQ_DIGITAL_USERS_USERNAME UNIQUE (USERNAME),
    CONSTRAINT UQ_DIGITAL_USERS_EMAIL UNIQUE (EMAIL)
);
-- Digital Banking Sessions
CREATE
OR REPLACE TABLE DIGITAL.USER_SESSIONS (
    SESSION_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    USER_ID NUMBER NOT NULL,
    SESSION_TOKEN VARCHAR(500) NOT NULL,
    DEVICE_TYPE VARCHAR(50),
    DEVICE_ID VARCHAR(200),
    IP_ADDRESS VARCHAR(45),
    USER_AGENT VARCHAR(500),
    START_TIME TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    LAST_ACTIVITY TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    END_TIME TIMESTAMP_NTZ,
    STATUS VARCHAR(20) DEFAULT 'Active',
    CONSTRAINT PK_USER_SESSIONS PRIMARY KEY (SESSION_ID),
    CONSTRAINT FK_USER_SESSIONS_USER FOREIGN KEY (USER_ID) REFERENCES DIGITAL.DIGITAL_USERS(USER_ID)
);
-- Bill Pay Payees
CREATE
OR REPLACE TABLE DIGITAL.BILL_PAY_PAYEES (
    PAYEE_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    CUSTOMER_ID NUMBER NOT NULL,
    PAYEE_NAME VARCHAR(200) NOT NULL,
    PAYEE_TYPE VARCHAR(50) NOT NULL,
    ACCOUNT_NUMBER VARCHAR(100),
    ADDRESS VARCHAR(500),
    CITY VARCHAR(100),
    STATE VARCHAR(50),
    ZIP_CODE VARCHAR(20),
    PHONE VARCHAR(20),
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_BILL_PAY_PAYEES PRIMARY KEY (PAYEE_ID),
    CONSTRAINT FK_BILL_PAY_PAYEES_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CORE.CUSTOMERS(CUSTOMER_ID)
);
-- =============================================================================
-- RISK MANAGEMENT
-- =============================================================================
-- Risk Rules and Models
CREATE
OR REPLACE TABLE RISK.RISK_RULES (
    RULE_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    RULE_NAME VARCHAR(100) NOT NULL,
    RULE_TYPE VARCHAR(50) NOT NULL,
    RULE_DESCRIPTION VARCHAR(500),
    RISK_SCORE NUMBER(3, 0) NOT NULL,
    SEVERITY VARCHAR(20) NOT NULL,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_RISK_RULES PRIMARY KEY (RULE_ID)
);
-- Risk Events and Alerts
CREATE
OR REPLACE TABLE RISK.RISK_EVENTS (
    EVENT_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    RULE_ID NUMBER NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    CUSTOMER_ID NUMBER,
    ACCOUNT_ID NUMBER,
    TRANSACTION_ID NUMBER,
    CARD_TRANSACTION_ID NUMBER,
    EVENT_TYPE VARCHAR(50) NOT NULL,
    EVENT_DESCRIPTION VARCHAR(500),
    RISK_SCORE NUMBER(3, 0) NOT NULL,
    SEVERITY VARCHAR(20) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'Open',
    ASSIGNED_TO VARCHAR(100),
    RESOLUTION_NOTES VARCHAR(1000),
    EVENT_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    RESOLVED_DATE TIMESTAMP_NTZ,
    CONSTRAINT PK_RISK_EVENTS PRIMARY KEY (EVENT_ID),
    CONSTRAINT FK_RISK_EVENTS_RULE FOREIGN KEY (RULE_ID) REFERENCES RISK.RISK_RULES(RULE_ID),
    CONSTRAINT FK_RISK_EVENTS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID),
    CONSTRAINT FK_RISK_EVENTS_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CORE.CUSTOMERS(CUSTOMER_ID)
);
-- =============================================================================
-- COMPLIANCE AND REGULATORY
-- =============================================================================
-- Regulatory Reports
CREATE
OR REPLACE TABLE COMPLIANCE.REGULATORY_REPORTS (
    REPORT_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    REPORT_TYPE VARCHAR(100) NOT NULL,
    REPORTING_PERIOD VARCHAR(50) NOT NULL,
    REGULATOR_ID VARCHAR(50) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'Draft',
    SUBMISSION_DATE TIMESTAMP_NTZ,
    DUE_DATE TIMESTAMP_NTZ NOT NULL,
    FILE_PATH VARCHAR(500),
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_REGULATORY_REPORTS PRIMARY KEY (REPORT_ID),
    CONSTRAINT FK_REGULATORY_REPORTS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID)
);
-- OFAC/Sanctions Screening
CREATE
OR REPLACE TABLE COMPLIANCE.SANCTIONS_SCREENING (
    SCREENING_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    CUSTOMER_ID NUMBER,
    TRANSACTION_ID NUMBER,
    ENTITY_NAME VARCHAR(200) NOT NULL,
    SCREENING_TYPE VARCHAR(50) NOT NULL,
    MATCH_TYPE VARCHAR(50),
    MATCH_SCORE NUMBER(5, 2),
    LIST_NAME VARCHAR(100) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'Pending',
    REVIEW_NOTES VARCHAR(1000),
    SCREENING_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    REVIEWED_BY VARCHAR(100),
    REVIEWED_DATE TIMESTAMP_NTZ,
    CONSTRAINT PK_SANCTIONS_SCREENING PRIMARY KEY (SCREENING_ID),
    CONSTRAINT FK_SANCTIONS_SCREENING_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CORE.CUSTOMERS(CUSTOMER_ID)
);
-- =============================================================================
-- ANALYTICS AND REPORTING
-- =============================================================================
-- Business Intelligence Metrics
CREATE
OR REPLACE TABLE ANALYTICS.DAILY_METRICS (
    METRIC_ID NUMBER AUTOINCREMENT START 1 INCREMENT 1 NOT NULL,
    INSTITUTION_ID NUMBER NOT NULL,
    METRIC_DATE DATE NOT NULL,
    TOTAL_TRANSACTIONS NUMBER(38, 0) DEFAULT 0,
    TOTAL_TRANSACTION_VOLUME NUMBER(18, 2) DEFAULT 0,
    TOTAL_CUSTOMERS NUMBER(38, 0) DEFAULT 0,
    NEW_CUSTOMERS NUMBER(38, 0) DEFAULT 0,
    ACTIVE_DIGITAL_USERS NUMBER(38, 0) DEFAULT 0,
    TOTAL_DEPOSITS NUMBER(18, 2) DEFAULT 0,
    TOTAL_LOANS NUMBER(18, 2) DEFAULT 0,
    FRAUD_DETECTED_COUNT NUMBER(38, 0) DEFAULT 0,
    FRAUD_LOSS_AMOUNT NUMBER(12, 2) DEFAULT 0,
    COMPLIANCE_ALERTS NUMBER(38, 0) DEFAULT 0,
    SYSTEM_UPTIME NUMBER(5, 2) DEFAULT 100.00,
    CREATED_DATE TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP(),
    CONSTRAINT PK_DAILY_METRICS PRIMARY KEY (METRIC_ID),
    CONSTRAINT FK_DAILY_METRICS_INSTITUTION FOREIGN KEY (INSTITUTION_ID) REFERENCES CORE.FINANCIAL_INSTITUTIONS(INSTITUTION_ID),
    CONSTRAINT UQ_DAILY_METRICS_DATE UNIQUE (INSTITUTION_ID, METRIC_DATE)
);