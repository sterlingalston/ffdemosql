window.repositoryObject = {"parameters":[{"name":"Returns","description":null,"mode":"OUT","data_type":"table type","custom_fields":{},"linked_terms":[]},{"name":"from_lsn","description":null,"mode":"IN","data_type":"binary(10)","custom_fields":{},"linked_terms":[]},{"name":"to_lsn","description":null,"mode":"IN","data_type":"binary(10)","custom_fields":{},"linked_terms":[]},{"name":"row_filter_option","description":null,"mode":"IN","data_type":"nvarchar(30)","custom_fields":{},"linked_terms":[]}],"parameters_custom_fields":[],"dependencies":{"uses":[],"used_by":[]},"object_id":"f10","name":"cdc.fn_cdc_get_net_changes_RISK_RISK_EVENTS","subtype":"FUNCTION","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"db_azure_ff_demo@db-server-ff-demo.database.windows.net","id":"d1"}},{"field":"Schema","value":"cdc"},{"field":"Name","value":"fn_cdc_get_net_changes_RISK_RISK_EVENTS"},{"field":"Type","value":"Function"}],"script":"create function [cdc].[fn_cdc_get_net_changes_RISK_RISK_EVENTS]\r\n\t(\t@from_lsn binary(10),\r\n\t\t@to_lsn binary(10),\r\n\t\t@row_filter_option nvarchar(30)\r\n\t)\r\n\treturns table\r\n\treturn\r\n\r\n\tselect NULL as __$start_lsn,\r\n\t\tNULL as __$operation,\r\n\t\tNULL as __$update_mask, NULL as [EVENT_ID], NULL as [RULE_ID], NULL as [INSTITUTION_ID], NULL as [CUSTOMER_ID], NULL as [ACCOUNT_ID], NULL as [TRANSACTION_ID], NULL as [CARD_TRANSACTION_ID], NULL as [EVENT_TYPE], NULL as [EVENT_DESCRIPTION], NULL as [RISK_SCORE], NULL as [SEVERITY], NULL as [STATUS], NULL as [ASSIGNED_TO], NULL as [RESOLUTION_NOTES], NULL as [EVENT_DATE], NULL as [RESOLVED_DATE]\r\n\twhere ( [sys].[fn_cdc_check_parameters]( N'RISK_RISK_EVENTS', @from_lsn, @to_lsn, lower(rtrim(ltrim(@row_filter_option))), 1) = 0)\r\n\r\n\tunion all\r\n\t\r\n\tselect __$start_lsn,\r\n\t    case __$count_7AD0A582\r\n\t    when 1 then __$operation\r\n\t    else\r\n\t\t\tcase __$min_op_7AD0A582 \r\n\t\t\t\twhen 2 then 2\r\n\t\t\t\twhen 4 then\r\n\t\t\t\tcase __$operation\r\n\t\t\t\t\twhen 1 then 1\r\n\t\t\t\t\telse 4\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\tcase __$operation\r\n\t\t\t\t\twhen 2 then 4\r\n\t\t\t\t\twhen 4 then 4\r\n\t\t\t\t\telse 1\r\n\t\t\t\t\tend\r\n\t\t\tend\r\n\t\tend as __$operation,\r\n\t\tnull as __$update_mask , [EVENT_ID], [RULE_ID], [INSTITUTION_ID], [CUSTOMER_ID], [ACCOUNT_ID], [TRANSACTION_ID], [CARD_TRANSACTION_ID], [EVENT_TYPE], [EVENT_DESCRIPTION], [RISK_SCORE], [SEVERITY], [STATUS], [ASSIGNED_TO], [RESOLUTION_NOTES], [EVENT_DATE], [RESOLVED_DATE]\r\n\tfrom\r\n\t(\r\n\t\tselect t.__$start_lsn as __$start_lsn, __$operation,\r\n\t\tcase __$count_7AD0A582 \r\n\t\twhen 1 then __$operation \r\n\t\telse\r\n\t\t(\tselect top 1 c.__$operation\r\n\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] c with (nolock)   \r\n\t\t\twhere  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  \r\n\t\t\tand ((c.__$operation = 2) or (c.__$operation = 4) or (c.__$operation = 1))\r\n\t\t\tand (c.__$start_lsn <= @to_lsn)\r\n\t\t\tand (c.__$start_lsn >= @from_lsn)\r\n\t\t\torder by c.__$start_lsn, c.__$command_id, c.__$seqval) end __$min_op_7AD0A582, __$count_7AD0A582, t.[EVENT_ID], t.[RULE_ID], t.[INSTITUTION_ID], t.[CUSTOMER_ID], t.[ACCOUNT_ID], t.[TRANSACTION_ID], t.[CARD_TRANSACTION_ID], t.[EVENT_TYPE], t.[EVENT_DESCRIPTION], t.[RISK_SCORE], t.[SEVERITY], t.[STATUS], t.[ASSIGNED_TO], t.[RESOLUTION_NOTES], t.[EVENT_DATE], t.[RESOLVED_DATE] \r\n\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] t with (nolock) inner join \r\n\t\t(\tselect  r.[EVENT_ID],\r\n\t\t    count(*) as __$count_7AD0A582 \r\n\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] r with (nolock)\r\n\t\t\twhere  (r.__$start_lsn <= @to_lsn)\r\n\t\t\tand (r.__$start_lsn >= @from_lsn)\r\n\t\t\tgroup by   r.[EVENT_ID]) m\r\n\t\ton t.__$seqval = ( select top 1 c.__$seqval from [cdc].[RISK_RISK_EVENTS_CT] c with (nolock) where  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  and c.__$start_lsn <= @to_lsn and c.__$start_lsn >= @from_lsn order by c.__$start_lsn desc, c.__$command_id desc, c.__$seqval desc ) and\r\n\t\t    ( (t.[EVENT_ID] = m.[EVENT_ID]) ) \t\r\n\t\twhere lower(rtrim(ltrim(@row_filter_option))) = N'all'\r\n\t\t\tand ( [sys].[fn_cdc_check_parameters]( N'RISK_RISK_EVENTS', @from_lsn, @to_lsn, lower(rtrim(ltrim(@row_filter_option))), 1) = 1)\r\n\t\t\tand (t.__$start_lsn <= @to_lsn)\r\n\t\t\tand (t.__$start_lsn >= @from_lsn)\r\n\t\t\tand ((t.__$operation = 2) or (t.__$operation = 4) or \r\n\t\t\t\t ((t.__$operation = 1) and\r\n\t\t\t\t  (2 not in \r\n\t\t\t\t \t\t(\tselect top 1 c.__$operation\r\n\t\t\t\t\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] c with (nolock) \r\n\t\t\t\t\t\t\twhere  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  \r\n\t\t\t\t\t\t\tand ((c.__$operation = 2) or (c.__$operation = 4) or (c.__$operation = 1))\r\n\t\t\t\t\t\t\tand (c.__$start_lsn <= @to_lsn)\r\n\t\t\t\t\t\t\tand (c.__$start_lsn >= @from_lsn)\r\n\t\t\t\t\t\t\torder by c.__$start_lsn, c.__$command_id, c.__$seqval\r\n\t\t\t\t\t\t ) \r\n\t \t\t\t   )\r\n\t \t\t\t )\r\n\t \t\t\t) \r\n\t\t\tand t.__$operation = (\r\n\t\t\t\tselect\r\n\t\t\t\t\tmax(mo.__$operation)\r\n\t\t\t\tfrom\r\n\t\t\t\t\t[cdc].[RISK_RISK_EVENTS_CT] as mo with (nolock)\r\n\t\t\t\twhere\r\n\t\t\t\t\tmo.__$seqval = t.__$seqval\r\n\t\t\t\t\tand \r\n\t\t\t\t\t ( (t.[EVENT_ID] = mo.[EVENT_ID]) ) \r\n\t\t\t\tgroup by\r\n\t\t\t\t\tmo.__$seqval\r\n\t\t\t)\t\r\n\t) Q\r\n\t\r\n\tunion all\r\n\t\r\n\tselect __$start_lsn,\r\n\t    case __$count_7AD0A582\r\n\t    when 1 then __$operation\r\n\t    else\r\n\t\t\tcase __$min_op_7AD0A582 \r\n\t\t\t\twhen 2 then 2\r\n\t\t\t\twhen 4 then\r\n\t\t\t\tcase __$operation\r\n\t\t\t\t\twhen 1 then 1\r\n\t\t\t\t\telse 4\r\n\t\t\t\t\tend\r\n\t\t\t\telse\r\n\t\t\t\tcase __$operation\r\n\t\t\t\t\twhen 2 then 4\r\n\t\t\t\t\twhen 4 then 4\r\n\t\t\t\t\telse 1\r\n\t\t\t\t\tend\r\n\t\t\tend\r\n\t\tend as __$operation,\r\n\t\tcase __$count_7AD0A582\r\n\t\twhen 1 then\r\n\t\t\tcase __$operation\r\n\t\t\twhen 4 then __$update_mask\r\n\t\t\telse null\r\n\t\t\tend\r\n\t\telse\t\r\n\t\t\tcase __$min_op_7AD0A582 \r\n\t\t\twhen 2 then null\r\n\t\t\telse\r\n\t\t\t\tcase __$operation\r\n\t\t\t\twhen 1 then null\r\n\t\t\t\telse __$update_mask \r\n\t\t\t\tend\r\n\t\t\tend\t\r\n\t\tend as __$update_mask , [EVENT_ID], [RULE_ID], [INSTITUTION_ID], [CUSTOMER_ID], [ACCOUNT_ID], [TRANSACTION_ID], [CARD_TRANSACTION_ID], [EVENT_TYPE], [EVENT_DESCRIPTION], [RISK_SCORE], [SEVERITY], [STATUS], [ASSIGNED_TO], [RESOLUTION_NOTES], [EVENT_DATE], [RESOLVED_DATE]\r\n\tfrom\r\n\t(\r\n\t\tselect t.__$start_lsn as __$start_lsn, __$operation,\r\n\t\tcase __$count_7AD0A582 \r\n\t\twhen 1 then __$operation \r\n\t\telse\r\n\t\t(\tselect top 1 c.__$operation\r\n\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] c with (nolock)\r\n\t\t\twhere  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  \r\n\t\t\tand ((c.__$operation = 2) or (c.__$operation = 4) or (c.__$operation = 1))\r\n\t\t\tand (c.__$start_lsn <= @to_lsn)\r\n\t\t\tand (c.__$start_lsn >= @from_lsn)\r\n\t\t\torder by c.__$start_lsn, c.__$command_id, c.__$seqval) end __$min_op_7AD0A582, __$count_7AD0A582, \r\n\t\tm.__$update_mask , t.[EVENT_ID], t.[RULE_ID], t.[INSTITUTION_ID], t.[CUSTOMER_ID], t.[ACCOUNT_ID], t.[TRANSACTION_ID], t.[CARD_TRANSACTION_ID], t.[EVENT_TYPE], t.[EVENT_DESCRIPTION], t.[RISK_SCORE], t.[SEVERITY], t.[STATUS], t.[ASSIGNED_TO], t.[RESOLUTION_NOTES], t.[EVENT_DATE], t.[RESOLVED_DATE]\r\n\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] t with (nolock) inner join \r\n\t\t(\tselect  r.[EVENT_ID],\r\n\t\t    count(*) as __$count_7AD0A582, \r\n\t\t    [sys].[ORMask](r.__$update_mask) as __$update_mask\r\n\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] r with (nolock)\r\n\t\t\twhere  (r.__$start_lsn <= @to_lsn)\r\n\t\t\tand (r.__$start_lsn >= @from_lsn)\r\n\t\t\tgroup by   r.[EVENT_ID]) m\r\n\t\ton t.__$seqval = ( select top 1 c.__$seqval from [cdc].[RISK_RISK_EVENTS_CT] c with (nolock) where  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  and c.__$start_lsn <= @to_lsn and c.__$start_lsn >= @from_lsn order by c.__$start_lsn desc, c.__$command_id desc, c.__$seqval desc ) and\r\n\t\t    ( (t.[EVENT_ID] = m.[EVENT_ID]) ) \t\r\n\t\twhere lower(rtrim(ltrim(@row_filter_option))) = N'all with mask'\r\n\t\t\tand ( [sys].[fn_cdc_check_parameters]( N'RISK_RISK_EVENTS', @from_lsn, @to_lsn, lower(rtrim(ltrim(@row_filter_option))), 1) = 1)\r\n\t\t\tand (t.__$start_lsn <= @to_lsn)\r\n\t\t\tand (t.__$start_lsn >= @from_lsn)\r\n\t\t\tand ((t.__$operation = 2) or (t.__$operation = 4) or \r\n\t\t\t\t ((t.__$operation = 1) and\r\n\t\t\t\t  (2 not in \r\n\t\t\t\t \t\t(\tselect top 1 c.__$operation\r\n\t\t\t\t\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] c with (nolock)\r\n\t\t\t\t\t\t\twhere  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  \r\n\t\t\t\t\t\t\tand ((c.__$operation = 2) or (c.__$operation = 4) or (c.__$operation = 1))\r\n\t\t\t\t\t\t\tand (c.__$start_lsn <= @to_lsn)\r\n\t\t\t\t\t\t\tand (c.__$start_lsn >= @from_lsn)\r\n\t\t\t\t\t\t\torder by c.__$start_lsn, c.__$command_id, c.__$seqval\r\n\t\t\t\t\t\t ) \r\n\t \t\t\t   )\r\n\t \t\t\t )\r\n\t \t\t\t) \r\n\t\t\tand t.__$operation = (\r\n\t\t\t\tselect\r\n\t\t\t\t\tmax(mo.__$operation)\r\n\t\t\t\tfrom\r\n\t\t\t\t\t[cdc].[RISK_RISK_EVENTS_CT] as mo with (nolock)\r\n\t\t\t\twhere\r\n\t\t\t\t\tmo.__$seqval = t.__$seqval\r\n\t\t\t\t\tand \r\n\t\t\t\t\t ( (t.[EVENT_ID] = mo.[EVENT_ID]) ) \r\n\t\t\t\tgroup by\r\n\t\t\t\t\tmo.__$seqval\r\n\t\t\t)\t\r\n\t) Q\r\n\t\r\n\tunion all\r\n\t\r\n\t\tselect t.__$start_lsn as __$start_lsn,\r\n\t\tcase t.__$operation\r\n\t\t\twhen 1 then 1\r\n\t\t\telse 5\r\n\t\tend as __$operation,\r\n\t\tnull as __$update_mask , t.[EVENT_ID], t.[RULE_ID], t.[INSTITUTION_ID], t.[CUSTOMER_ID], t.[ACCOUNT_ID], t.[TRANSACTION_ID], t.[CARD_TRANSACTION_ID], t.[EVENT_TYPE], t.[EVENT_DESCRIPTION], t.[RISK_SCORE], t.[SEVERITY], t.[STATUS], t.[ASSIGNED_TO], t.[RESOLUTION_NOTES], t.[EVENT_DATE], t.[RESOLVED_DATE]\r\n\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] t  with (nolock)\r\n\t\twhere lower(rtrim(ltrim(@row_filter_option))) = N'all with merge'\r\n\t\t\tand ( [sys].[fn_cdc_check_parameters]( N'RISK_RISK_EVENTS', @from_lsn, @to_lsn, lower(rtrim(ltrim(@row_filter_option))), 1) = 1)\r\n\t\t\tand (t.__$start_lsn <= @to_lsn)\r\n\t\t\tand (t.__$start_lsn >= @from_lsn)\r\n\t\t\tand (t.__$seqval = ( select top 1 c.__$seqval from [cdc].[RISK_RISK_EVENTS_CT] c with (nolock) where  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  and c.__$start_lsn <= @to_lsn and c.__$start_lsn >= @from_lsn order by c.__$start_lsn desc, c.__$command_id desc, c.__$seqval desc ))\r\n\t\t\tand ((t.__$operation = 2) or (t.__$operation = 4) or \r\n\t\t\t\t ((t.__$operation = 1) and \r\n\t\t\t\t   (2 not in \r\n\t\t\t\t \t\t(\tselect top 1 c.__$operation\r\n\t\t\t\t\t\t\tfrom [cdc].[RISK_RISK_EVENTS_CT] c with (nolock)\r\n\t\t\t\t\t\t\twhere  ( (c.[EVENT_ID] = t.[EVENT_ID]) )  \r\n\t\t\t\t\t\t\tand ((c.__$operation = 2) or (c.__$operation = 4) or (c.__$operation = 1))\r\n\t\t\t\t\t\t\tand (c.__$start_lsn <= @to_lsn)\r\n\t\t\t\t\t\t\tand (c.__$start_lsn >= @from_lsn)\r\n\t\t\t\t\t\t\torder by c.__$start_lsn, c.__$command_id, c.__$seqval\r\n\t\t\t\t\t\t ) \r\n\t \t\t\t\t)\r\n\t \t\t\t )\r\n\t \t\t\t)\r\n\t\t\tand t.__$operation = (\r\n\t\t\t\tselect\r\n\t\t\t\t\tmax(mo.__$operation)\r\n\t\t\t\tfrom\r\n\t\t\t\t\t[cdc].[RISK_RISK_EVENTS_CT] as mo with (nolock)\r\n\t\t\t\twhere\r\n\t\t\t\t\tmo.__$seqval = t.__$seqval\r\n\t\t\t\t\tand \r\n\t\t\t\t\t ( (t.[EVENT_ID] = mo.[EVENT_ID]) ) \r\n\t\t\t\tgroup by\r\n\t\t\t\t\tmo.__$seqval\r\n\t\t\t)","imported_at":"2025-07-03 21:41"};